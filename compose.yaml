services:
  recommendation-service_mongo:
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: mongo
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 2s
      timeout: 10s
      retries: 5
    volumes:
      - recommendation-mongo-data:/data/db
    networks:
      - recommendation-service
      - backend
    labels:
      - "traefik.http.routers.recommendation-service_mongo.rule=HostRegexp(`mongo\\..+`) && PathPrefix(`/user`)"


  recommendation-service_postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow

    networks:
      - recommendation-service


  recommendation-service_redis:
    image: redis:8.0-rc1-alpine

    networks:
      - recommendation-service


  recommendation-service_airflow:
    image: apache/airflow:latest-python3.12
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycogreen://airflow:airflow@postgres/airflow
      depends_on: postgres
    networks:
      - recommendation-service



  recommendation-service_qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - recommendation-service

  recommendation-service:
    build:
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      MONGO_URL: recommendation-service_mongo
      MONGO_USER: root
      MONGO_PASSWORD: root
    depends_on:
      recommendation-service_mongo:
        condition: service_healthy
    volumes:
      - .:/recommendation-service
    tty: true
    networks:
      - recommendation-service
      - backend
      - analytics
    labels:
      - "traefik.http.routers.recommendation-service.rule=HostRegexp(`api\\..+`) && PathPrefix(`/user`)"

networks:
  recommendation-service:
volumes:
  recommendation-mongo-data:

